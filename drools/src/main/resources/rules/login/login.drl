package rules.login;

import java.lang.String;
import com.sbnz.ibar.rto.events.LoginEvent;
import com.sbnz.ibar.rto.events.SuspiciousEmailEvent
import com.sbnz.ibar.rto.events.SuspiciousIpEvent;
import com.sbnz.ibar.rto.EmailCheckFact;
import com.sbnz.ibar.rto.IpCheckFact;


rule "Unsuccessful login attempts - User account is suspicious"
    when
        $le: LoginEvent($user: user, user != null);
        Number(intValue >= 5) from accumulate(
			$ale: LoginEvent(user.getId() == $user.getId(), success == false) over window:time(2m), count($ale)
		);
		not(SuspiciousEmailEvent(email.equals($user.getEmail())));
    then
    	System.out.println("LOG -> 5 UNSUCCESSFUL LOGIN ATTEMPTS FROM USER#" + $user.getId());
    	insert(new SuspiciousEmailEvent($user.getEmail()));
end

rule "Unsuccessful login attempts - IP is suspicious"
    when
        $le: LoginEvent($ipAddress: ipAddress);
        Number(intValue >= 10) from accumulate(
			$ale: LoginEvent(ipAddress == $ipAddress, success == false) over window:time(4m), count($ale)
		);
		not(SuspiciousIpEvent(ipAddress.equals($ipAddress)));
    then
    	System.out.println("LOG -> 10 UNSUCCESSFUL LOGIN ATTEMPTS FROM IP#" + $ipAddress);
    	insert(new SuspiciousIpEvent($ipAddress));
end

rule "User account temporarily disabled"
    when
        $lcf: EmailCheckFact($email: userEmail);
        SuspiciousEmailEvent(email.equals($email));
    then
    	System.out.println("LOG -> USER TEMPORARILY BLOCKED " + $email);
        $lcf.setAllowed(false);
        delete($lcf);
end

rule "User account not disabled"
    when
        $lcf: EmailCheckFact($email: userEmail);
        not(SuspiciousEmailEvent(email.equals($email)));
    then
    	System.out.println("LOG -> USER NOT BLOCKED " + $email);
        $lcf.setAllowed(true);
        delete($lcf);
end

rule "IP temporarily blocked"
    when
        $lcf: IpCheckFact($ipAddress: ipAddress);
        SuspiciousIpEvent(ipAddress.equals($ipAddress));
    then
    	System.out.println("LOG -> IP TEMPORARILY BLOCKED " + $ipAddress);
        $lcf.setAllowed(false);
        delete($lcf);
end

rule "IP not blocked"
    when
        $lcf: IpCheckFact($ipAddress: ipAddress);
        not(SuspiciousIpEvent(ipAddress.equals($ipAddress)));
    then
    	System.out.println("LOG -> IP TEMPORARILY BLOCKED " + $ipAddress);
        $lcf.setAllowed(true);
        delete($lcf);
end
